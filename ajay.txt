"use client";
import { Bell, Menu, Search } from "lucide-react";
import { useState } from "react";

export default function TopNavbar() {
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);

  return (
    <div className="flex items-center justify-between px-6 py-3 bg-white border-b shadow-sm sticky top-0 z-10">
      {/* Left: Hamburger + Page Title */}
      <div className="flex items-center gap-4">
        <button
          onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
          className="text-gray-600 lg:hidden"
        >
          <Menu className="w-6 h-6" />
        </button>
        <h2 className="text-xl font-semibold text-indigo-600 hidden sm:block">
          Dashboard
        </h2>
      </div>

      {/* Right: Search, Bell, Profile */}
      <div className="flex items-center gap-4">
        {/* Search Icon */}
        <button className="text-gray-600 hover:text-indigo-500">
          <Search className="w-5 h-5" />
        </button>

        {/* Notification Icon */}
        <button className="relative text-gray-600 hover:text-indigo-500">
          <Bell className="w-5 h-5" />
          <span className="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full border border-white"></span>
        </button>

        {/* Profile Avatar */}
        <div className="w-8 h-8 rounded-full overflow-hidden border-2 border-indigo-500">
          <img
            src="https://i.pravatar.cc/40"
            alt="Profile"
            className="w-full h-full object-cover"
          />
        </div>
      </div>
    </div>
  );
}

import { FaChartLine, FaDollarSign, FaShoppingCart, FaMoneyBillWave } from "react-icons/fa";



export default function DashboardCard({ title, value, percentage, icon }) {
    return (
        <div className="bg-white rounded p-4 shadow-sm border w-full sm:w-[48%] lg:w-[23%]">
            <div className="flex items-center justify-between mb-2">
                <h3 className="text-sm text-gray-500">{title}</h3>
                <span className="text-xl">{icon}</span>
            </div>
            <div className="text-2xl font-bold text-gray-800">${value}</div>
            <div className="border boder-3 border-gray-200"><hr /></div>
            <div className={`text-sm mt-1 flex items-center justify-between ${percentage > 0 ? 'text-green-500' : 'text-red-500'}`}>
                <h5>
                    Last Month
                </h5>
                <span>
                    {percentage > 0 ? '▲' : '▼'} {Math.abs(percentage)}%
                </span>
            </div>
        </div>
    )
}

<body className="bg-gray-100">
  <div className="flex min-h-screen">
    <Sidebar />
    <div className="flex-1 bg-gray-50">
      <Header />
      <main className="p-4">{children}</main>
    </div>
  </div>
</body>


"use client";
import { PieChart, Pie, Cell, ResponsiveContainer, Tooltip } from "recharts";

const data = [
  { name: "Marketing", value: 67927 },
  { name: "Sales", value: 24789 },
];

const COLORS = ["#3b82f6", "#10b981"];

export default function CostBreakdown() {
  return (
    <div className="bg-white p-4 rounded-2xl shadow w-full">
      <h3 className="text-lg font-semibold mb-2">Cost Breakdown</h3>
      <ResponsiveContainer width="100%" height={300}>
        <PieChart>
          <Pie
            data={data}
            dataKey="value"
            nameKey="name"
            cx="50%"
            cy="50%"
            innerRadius={60}
            outerRadius={90}
            fill="#8884d8"
            label
          >
            {data.map((_, index) => (
              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
            ))}
          </Pie>
          <Tooltip />
        </PieChart>
      </ResponsiveContainer>
    </div>
  );
}


 <div className="border boder-3 border-gray-200"><hr /></div>

 "use client";

const profitData = [
  { month: "Jan", value: 30000, percent: 75 },
  { month: "Feb", value: 27000, percent: 60 },
  { month: "Mar", value: 40000, percent: 90 },
  { month: "Apr", value: 20000, percent: 45 },
  { month: "May", value: 35000, percent: 80 },
  { month: "Jun", value: 15000, percent: 30 },
];

export default function MonthlyProfitsCard() {
  return (
    <div className="bg-white p-4 rounded shadow-sm border">
      <h3 className="text-sm font-semibold text-gray-700 mb-4">Monthly Profits</h3>
      <p className="text-xs text-gray-500 mb-1">Dolor cupidatat non proident.</p>

      <div className="space-y-4">
        {profitData.map((item) => (
          <div key={item.month}>
            <div className="flex justify-between mb-1">
              <span className="text-sm text-gray-700 font-medium">{item.month}</span>
              <span className="text-sm text-gray-500">${item.value.toLocaleString()}</span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2">
              <div
                className="bg-indigo-500 h-2 rounded-full"
                style={{ width: `${item.percent}%` }}
              />
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}


"use client";
import {
  PieChart, Pie, Cell, Tooltip, ResponsiveContainer
} from "recharts";

const data = [
  { name: "Marketing", value: 67927 },
  { name: "Sales", value: 24789 },
];

const COLORS = ["#F97316", "#6366F1"]; 

export default function CostBreakdownChart() {
  return (
    <div className="bg-white p-4 rounded shadow-sm border mt-8">
      <h3 className="text-sm font-semibold text-gray-700">Cost Breakdown</h3>
      <p className="text-xs text-gray-500 mb-4">Exceptetur sint occaecat cupidatat non proident.</p>
      <ResponsiveContainer width="100%" height={250}>
        <PieChart>
          <Tooltip />
          <Pie
            data={data}
            cx="50%"
            cy="50%"
            innerRadius={60}
            outerRadius={90}
            fill="#8884d8"
            paddingAngle={5}
            dataKey="value"
            label={({ name, percent }) =>
              `${name}: ${(percent * 100).toFixed(0)}%`
            }
          >
            {data.map((entry, index) => (
              <Cell key={`cell-${index}`} fill={COLORS[index]} />
            ))}
          </Pie>
        </PieChart>
      </ResponsiveContainer>

      {/* Legend below */}
      <div className="flex justify-around mt-4">
        <div className="text-center">
          <p className="text-gray-700 font-medium">Marketing</p>
          <p className="text-gray-500 text-sm">${data[0].value.toLocaleString()}</p>
        </div>
        <div className="text-center">
          <p className="text-gray-700 font-medium">Sales</p>
          <p className="text-gray-500 text-sm">${data[1].value.toLocaleString()}</p>
        </div>
      </div>
    </div>
  );
}


"use client";

const data = [
  { name: "Marketing", percent: 73, color: "#F97316" }, // Orange
  { name: "Sales", percent: 27, color: "#6366F1" },      // Indigo
];

export default function CostBreakdownChart() {
  return (
    <div className="bg-white p-4 rounded shadow-sm border mt-8">
      <h3 className="text-sm font-semibold text-gray-700">Cost Breakdown</h3>
      <p className="text-xs text-gray-500 mb-4">
        Excepteur sint occaecat cupidatat non proident.
      </p>

      {/* Circles Side by Side */}
      <div className="flex justify-around">
        {data.map((item) => (
          <div className="flex flex-col items-center" key={item.name}>
            <div className="relative w-24 h-24">
              {/* Background circle */}
              <div className="absolute inset-0 rounded-full border-4 border-gray-200" />
              {/* Progress circle */}
              <div
                className="absolute inset-0 rounded-full border-4"
                style={{
                  borderColor: item.color,
                  clipPath: "inset(0 0 0 0)",
                  transform: `rotate(-90deg)`,
                  maskImage: `conic-gradient(${item.color} ${item.percent}%, transparent ${item.percent}%)`,
                  WebkitMaskImage: `conic-gradient(${item.color} ${item.percent}%, transparent ${item.percent}%)`,
                }}
              />
              {/* Center label */}
              <div className="absolute inset-0 flex items-center justify-center">
                <span className="text-sm font-semibold text-gray-700">{item.percent}%</span>
              </div>
            </div>
            <p className="mt-2 text-gray-700 font-medium text-sm">{item.name}</p>
          </div>
        ))}
      </div>
    </div>
  );
}
